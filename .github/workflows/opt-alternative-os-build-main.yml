#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Every 45th minute every 3 hours during working days
# Every 6 hours during weekends ... we don't want to be flooded with emails

name: Modified Alternative OS Build (Camel 4)
permissions:
  contents: read
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - windows-latest
        - macos-latest
        - windows-2019
      fail-fast: false
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build (${{ matrix.os }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/camel/camel', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      with:
        persist-credentials: false
    - run: touch optcd-3.txt
    - name: Set up JDK ${{ matrix.os }}
      uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73
      with:
        distribution: temurin
        java-version: 17
        cache: maven
    - run: touch optcd-4.txt
    - name: mvn build ${{ matrix.os }}
      run: ./mvnw -B -V -D'http.keepAlive=false' -l build.log -D'maven.wagon.http.pool=false'
        -D'maven.wagon.httpconnectionManager.ttlSeconds=120' --no-transfer-progress
        -Dquickly install
    - run: touch optcd-5.txt
    - name: Archive logs ${{ matrix.os }}
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
      with:
        name: build-${{ matrix.os }}
        path: build.log
        retention-days: 2
    - run: touch optcd-6.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build (${{ matrix.os }})
        path: /home/runner/inotifywait-log-build (${{ matrix.os }}).csv
    name: build (${{ matrix.os }})
'on':
- push
- workflow_dispatch
